그리디 알고리즘은 당장 눈 앞에 보이는 최적의 상황만을 쫓는 알고리즘으로 가장 단순한 형태의 알고리즘
그리디 알고리즘은 항상 최적의 결과를 도출하는 것은 아니지만 어느 정도 최적의 해에 근사한 값을 빠르게 구할 수 있다는 장점이 있다
또한 특정한 상황에 있어서 그리디 알고리즘이 최적의 해를 보장할 수도 있다는 점이다

그리디 알고리즘의 대표적인 예제는 거스름 돈 문제입니다. 우리가 흔히 거스름 돈을 줄 때 가장 적은 양의 화폐를 주는 것이 제일 편합니다.
예를 들어 560원을 걸러주어야 할 때 10원짜리 56개를 주는 것 보다 500원짜리 1개, 50원짜리 1개, 10원짜리 1개를 주는 것이 총 3개로 더 편합니다. 따라서 이런 경우 무조건 더 큰 화폐 단위부터 거슬러 준다는 알고리즘만 지키면 최적의 해를 보장할 수 있습니다.

이러한 그리디 알고리즘은 기본적으로 무조건 큰 경우대로 무조건 작은 경우대로, 무조건 긴 경우대로, 무조건 짧은 경우대로 등으로 극단적으로 문제에 접근한다는 점에서 정렬 기법이 함께 사용되는 경우가 많습니다. 그 대표적인 예시가 우리가 이전에 다루어보았던 크루스칼 알고리즘으로 모든 간선을 정렬한 이후에 짧은 간선부터 연결하는 최소 비용 신장 트리 알고리즘입니다.

이렇게 단순하게 큰 경우부터 찾는 알고리즘과 같이 간단하게 탐욕적으로 문제를 해결하는 기법을 그리디 알고리즘이라고 말하는 것입니다.

그리디 알고리즘이 최적의 해를 보장하는 경우도 많으나 애석하게도 최적의 해를 보장하지 못하는 경우가 더 많습니다. 그럴 때 다이나믹 프로그래밍 등의 기타 알고리즘 기법을 적용해야 하기도 합니다.