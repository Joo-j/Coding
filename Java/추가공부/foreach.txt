4. 향상된 for문 (foreach)

- Enumeration을 이용하지 않고도, Collection의 요소들을 순차적으로 접근하는 방법이 있다.

​

<문법>

for(데이터 타입 접근변수명 : 배열이나 컬렉션 참조변수명){
    반복문장
}

ex)
String array[] ={"Hi", "Every", "One"};
for(String str : array){ //array에 존재하는 String 타입 객체 각각에 대해서~
   stack.push(str);
}
​

<사용 예제>

import java.util.Stack;
public class StackQueueTest {
	public static void main(String[] args) {
		Stack<String> stack = new Stack<String>(); //Generics을 이용하여 Collection이 저장할 데이터 타입 지정
		String array[] = {"Hi-0", "Hi-1", "Hi-2"};
		
		for(String str : array) { //stack에 array의 모든 String 삽입
			stack.push(str);
		}
		for(String str : stack) { //stack에 있는 모든 String 출력.
			System.out.println(str); //스택에 있는 원소를 출력하는 것이므로, stack 순으로 출력되는 것은 아니다. pop()연산 아님.
		}
/** 출력결과
Hi-0
Hi-1
Hi-2
*/
[출처] 자바(Java) 스택(Stack), 큐(Queue) 사용 방법|작성자 pjok1122