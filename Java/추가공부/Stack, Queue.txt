1. 스택

- LIFO 형태의 자료구조

- 계산기, 뒤로가기 버튼 등에 구현.

​

<사용 코드>

import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
public class StackQueueTest {
	public static void main(String[] args) {
		Stack<String> stack = new Stack<String>(); //Generics을 이용하여 Collection이 저장할 데이터 타입 지정
		for(int i=0;i<3;i++)
			stack.push("Hi-"+i); //stack에 데이터를 삽입하는 문장
		
		//stack = ["Hi-0", "Hi-1", "Hi-2"], top=2
		
		System.out.println(stack.pop()); //스택의 꼭대기 값을 반환하고 삭제한다.             Hi-2
		System.out.println(stack.peek()); //스택의 꼭대기 값을 반환한다.                  Hi-1
		System.out.println(stack.search("Hi-1")); //값이 존재하면 1, 아니면 -1을 출력한다.    1
		System.out.println(stack.isEmpty()); //스택이 비어있으면 true을 출력한다.         false
		System.out.println(stack);			//[Hi-0, Hi-1]
- Collection이 모든 객체를 저장할 수 있기 때문에, Generics이라는 조건을 주어 저장할 수 있는 타입을 지정할 수 있다. <String> 이 부분임

- stack은 top이라는 변수만을 저장하며, 가장 꼭대기의 위치가 어디인지를 저장하고 있다.

- stack.push(Object obj) : 꼭대기에 객체를 삽입한다.

- stack.pop() : 꼭대기가 가리키는 값을 반환하고 stack에서 삭제한다.

- stack.peek() : 꼭대기가 가리키는 값을 반환한다.

- stack.search(Object obj) : 스택 내에 obj가 있는지 확인한다. 있을 경우 1 반환

- stack.isEmpty() : 스택이 비어있을 경우 true를 반환

​

​

2. 큐(Queue)

- 큐는 FIFO 형태의 자료구조

- 자바에서 Queue는 인터페이스이므로 객체 생성이 불가능하다.

- 따라서 LinkedList를 형변환하여 조작한다.

​

<사용 코드>

import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
public class StackQueueTest {
	public static void main(String[] args) {
		Queue<String> queue = new LinkedList<String>();
		for(int i=0;i<3;i++)
			queue.add("데이터-"+i); //큐에 데이터를 삽입한다.
		
		//queue = ["데이터-0", "데이터-1", "데이터-2"], front=0, rear=2
		
		System.out.println(queue.peek()); //큐의 front가 가리키는 값을 반환한다.         데이터-0
		System.out.println(queue.poll()); //큐의 front가 가리키는 값을 반환하고 삭제한다.    데이터-0
		System.out.println(queue.isEmpty()); // false
		System.out.println(queue);			//[데이터-1, 데이터-2]
	}
}
- 큐에는 front와 rear라는 변수가 있어서, 각각 맨 앞과 맨 뒤의 인덱스를 가리키고 있다.

- queue.add() : 데이터를 삽입하는 메서드

- queue.peek() : 맨 앞(front)가 가리키는 값을 반환한다.

- queue.poll() : 맨 앞(front)가 가리키는 값을 반환하고 삭제한다.

​

Stack은 push, pop 이지만 Queue에서는 add와 poll을 사용한다. (타 언어처럼 똑같은 방식을 사용하면 더 좋으련만,,)

​
[출처] 자바(Java) 스택(Stack), 큐(Queue) 사용 방법|작성자 pjok1122