package j;

import java.util.Arrays;
import java.util.Scanner;

public class Main {

	static boolean visited[][];
	static int a[][];
	static int w;
	static int h;
	static int dx[] = { 1, 1, 0, -1, -1, -1, 0, 1 };
	static int dy[] = { 0, 1, 1, 1, 0, -1, -1, -1 };

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		while (true) {
			int count = 0;
			w = sc.nextInt();
			h = sc.nextInt();
			if(w==0&&h==0) break;
			
			a = new int[h][w];
			visited = new boolean[h][w];

			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					a[i][j] = sc.nextInt();
				}
			}

			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					if (a[i][j] == 1 && !visited[i][j]) {
						count++;						
						dfs(i, j);						
					}
				}
			}
			System.out.println(count);
		}
	}

	static void dfs(int i, int j) {
		visited[i][j] = true;
		for (int q = 0; q < 8; q++) {
			int nx = i + dx[q];
			int ny = j + dy[q];
			if (nx >= 0 && nx < h && ny >= 0 && ny < w) {
				if (a[nx][ny] == 1 && !visited[nx][ny]) {					
					dfs(nx, ny);
				}
			}
		}
	}
}