package j;

import java.util.Scanner;

public class Main {

	static int p[] = new int[10001];
	static int a[] = new int[10001];

	static int find(int x) { // 최상위 부모노드를 찾는 메소드 , p[x]는 x의 부모노드
		if (p[x] == x)
			return x;
		p[x] = find(p[x]);
		return p[x];
	}
	
	static void merge(int x, int y) { // 두개의 노드를 합치는 메소드
		x = find(x);
		y = find(y);
		if (a[x] > a[y])
			p[x] = y;
		else
			p[y] = x;
	}

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		int n = sc.nextInt();
		int m = sc.nextInt();
		int k = sc.nextInt();
		int sum = 0;
		for (int i = 1; i <= n; i++) {
			p[i] = i;
		}				
		for (int i = 1; i <= n; i++) {
			a[i] = sc.nextInt();
		}
		for (int i = 0; i < m; i++) {
			int q = sc.nextInt();
			int p = sc.nextInt();
			if (find(q) != find(p))
				merge(q, p);
		}

		for (int i = 1; i <= n; i++) {
			if (find(i) != 0) {
				sum += a[i];
				merge(0, find(i));
			}
		}

		if (sum <= k)
			System.out.println(sum);
		else
			System.out.println("Oh no");

		sc.close();
	}
}